@model BatchJob.Models.CronTriggerViewModel

@{
    ViewBag.Title = "新增触发器";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("create-cron-trigger", "home", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.CronExpression, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CronExpression, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CronExpression, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.JobName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.JobId, Model.Jobs, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.JobId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="新 增" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("返回列表", "trigger-manager")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
